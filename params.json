{
  "name": "browserstack-automate",
  "tagline": ".NET client for the BrowserStack Automate REST API",
  "body": "# ![BrowserStack](https://github.com/martincostello/browserstack-automate/raw/master/browserstack-logo.png) BrowserStack Automate REST API .NET Client\r\n\r\n[![NuGet](https://buildstats.info/nuget/MartinCostello.BrowserStack.Automate)](http://www.nuget.org/packages/MartinCostello.BrowserStack.Automate)\r\n\r\n## Overview\r\n\r\nThis repository contains a .NET client library/NuGet package for the [BrowserStack Automate](https://www.browserstack.com/automate) REST API.\r\n\r\nFeatures include:\r\n\r\n * Querying the status of a BrowserStack Automate plan.\r\n * Querying the available browsers.\r\n * Querying and deleting builds.\r\n * Querying and deleting projects.\r\n * Querying and deleting sessions.\r\n * Querying session log.\r\n * Setting the status of a session.\r\n * Regenerating the API access key.\r\n\r\nThe assembly supports .NET Core (via .NET Standard 1.3) and .NET Framework 4.5.1.\r\n\r\n## Installation\r\n\r\n```batchfile\r\nInstall-Package MartinCostello.BrowserStack.Automate\r\n```\r\n\r\n## Usage Examples\r\n\r\nThe following example shows a custom [xUnit.net](https://xunit.github.io/) ```[Trait]``` that checks for an available BrowserStack Automate session before running the test, otherwise it is skipped.\r\n\r\n```csharp\r\nnamespace MyApp.Tests\r\n{\r\n    using System;\r\n    using System.Configuration;\r\n    using MartinCostello.BrowserStack.Automate;\r\n    using Xunit;\r\n\r\n    [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)]\r\n    public sealed class RequiresBrowserStackAutomateAttribute : FactAttribute\r\n    {\r\n        public RequiresBrowserStackAutomateAttribute()\r\n        {\r\n            string userName = Environment.GetEnvironmentVariable(\"BrowserStack_UserName\");\r\n            string accessKey = Environment.GetEnvironmentVariable(\"BrowserStack_AccessKey\");\r\n\r\n            var client = new BrowserStackAutomateClient(userName, accessKey);\r\n            var plan = client.GetStatusAsync().Result;\r\n\r\n            if (plan.MaximumAllowedParallelSessions < 1 ||\r\n                plan.ParallelSessionsRunning == plan.MaximumAllowedParallelSessions)\r\n            {\r\n                Skip = \"No BrowserStack Automate sessions are currently available.\";\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Feedback\r\n\r\nAny feedback or issues can be added to the issues for this project in [GitHub](https://github.com/martincostello/browserstack-automate/issues).\r\n\r\n## Repository\r\n\r\nThe repository is hosted in [GitHub](https://github.com/martincostello/browserstack-automate): https://github.com/martincostello/browserstack-automate.git\r\n\r\n## License\r\n\r\nThis project is licensed under the [Apache 2.0](https://github.com/martincostello/browserstack-automate/blob/master/LICENSE) license.\r\n\r\n## Building and Testing\r\n\r\nTo build and test the assembly run one of the following set of commands:\r\n\r\n**Linux/OS X**\r\n\r\n```sh\r\nEXPORT BrowserStack_UserName  = \"MyUserName\"\r\nEXPORT BrowserStack_AccessKey = \"MyAccessKey\"\r\n./build.sh\r\n```\r\n\r\n**Windows**\r\n\r\n```powershell\r\n$env:BrowserStack_UserName  = \"MyUserName\"\r\n$env:BrowserStack_AccessKey = \"MyAccessKey\"\r\n.\\Build.ps1\r\n```\r\n\r\n_If you do not have a BrowserStack Automate access key you can still just run the build script and the integration tests that require credentials will be skipped._",
  "google": "UA-42907618-5",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}